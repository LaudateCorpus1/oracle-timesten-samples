#######################################################################
#
# Requires gmake
#
# 64-bit Solaris (Workshop Compiler) Makefile for the TimesTen
# TTCLASSES XLA sample programs.
#
# Copyright (c) 1999, 2017, Oracle and/or its affiliates. All rights reserved.
#
#######################################################################

INSTDIR         = $(TIMESTEN_HOME)/install
COMMON          = $(QUICKSTART_HOME)/sample_code/common
SAMPLES         = $(QUICKSTART_HOME)/sample_code/ttclasses
TTC_INCLUDEDIR  =  $(INSTDIR)/include/ttclasses

# Add this flag to DEFS to workaround a Sun Workshop 5 strstream bug/hang
# related to synchronization between the C++/ostream and C/printf routines
# SOL64_OSTREAM_BUG	=	-DSOL64_OSTRSTREAM

THREAD_SAFE     = -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS

64BIT           = -DTT_64BIT  
OPTFLAG         = -xO4
DEBUGFLAG       = -g -DTTDEBUG -xs
INCS            = -I$(INSTDIR)/include -I$(TTC_INCLUDEDIR) -I$(COMMON)
DEFS            = $(THREAD_SAFE) $(64BIT)
PLATFORM        = -mt -m64 -xarch=sparcvis
CFLAGS          = $(DEFS) $(INCS) $(OPTFLAG) $(PLATFORM)

LDFLAGS         = $(OPTFLAG) $(PLATFORM)
TTCLASSES_LIB   = -lttclasses
DIRLIBS         = -lpthread -lsocket -L$(INSTDIR)/lib -ltten -lttclasses

CPLUSPLUS       = CC

# default LINK line (both opt/debug)
LINK            = $(CPLUSPLUS) $(OPTFLAG) $(PLATFORM)

ARFLAGS         =

SHLDEXT         = so
AREXT           = a

OBJ_DIR         = obj

# used to determine library names
TT_LIBTTEN    = $(wildcard $(INSTDIR)/lib/libtten.$(SHLDEXT))

PLAT_SPECIFIC_CLEAN   = rm -rf $(SRC)/SunWS_cache lib/SunWS_cache

# -----------------------------------------------------------------------------
# file lists
# -----------------------------------------------------------------------------

TTC_DEMO_CPP_OBJS = \
$(OBJ_DIR)/ttXlaAdmin.o \
$(OBJ_DIR)/xlasubscriber1.o \
$(OBJ_DIR)/xlasubscriber2.o

UTILS = \
$(SAMPLES)/$(OBJ_DIR)/testprog_utils.o

TESTPROGS = \
ttXlaAdmin \
xlasubscriber1 \
xlasubscriber2

# -----------------------------------------------------------------------------
#  Top-level targets
# -----------------------------------------------------------------------------
ifneq ($(strip $(TT_LIBTTEN)),)
PROGS = $(TESTPROGS)
endif

all: $(PROGS)

clean:
		-rm -rf $(OBJ_DIR)/*.o $(TESTPROGS)
		$(PLAT_SPECIFIC_CLEAN)

# -----------------------------------------------------------------------------
# build targets
# -----------------------------------------------------------------------------

.SUFFIXES: .cpp $(SUFFIXES)

.KEEP.STATE:

$(OBJ_DIR)/%.o:%.c
	$(CC) $(CFLAGS) -c $*.c -o $@

$(OBJ_DIR)/%.o:%.cpp
	$(CPLUSPLUS) $(CFLAGS) -c $*.cpp -o $@

#
# TTClasses direct linked sample programs
#

ttXlaAdmin: $(UTILS) $(OBJ_DIR)/ttXlaAdmin.o
	$(PURIFY) $(CPLUSPLUS) -o $@ $(OBJ_DIR)/ttXlaAdmin.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)

xlasubscriber1: $(UTILS) $(OBJ_DIR)/xlasubscriber1.o
	$(PURIFY) $(CPLUSPLUS) -o $@ $(OBJ_DIR)/xlasubscriber1.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)

xlasubscriber2: $(UTILS) $(OBJ_DIR)/xlasubscriber2.o
	$(PURIFY) $(CPLUSPLUS) -o $@ $(OBJ_DIR)/xlasubscriber2.o $(UTILS) \
	$(LDFLAGS) $(DIRLIBS)
