#
# Windows (2000/XP) Makefile for the TimesTen TTCLASSES 
# demo programs.
#
# Copyright (c) 1999, 2017, Oracle and/or its affiliates. All rights reserved.
#
#

ODBC    =  $(TIMESTEN_HOME)\install
COMMON  =  $(QUICKSTART_HOME)\sample_code\common
SAMPLES =  $(QUICKSTART_HOME)\sample_code\ttclasses
TTVER   =  1211
WINMT	=	mt.exe 

### Uncomment the eight lines below (which all start VCPP_) if you get
### errors like "Could not open include file: 'windows.h': No such
### file or directory" or like "LINK: fatal error LNK1104: cannot open
### file "uuid.lib"
###
### NOTE: nmake does not tolerate leading spaces, so you must make
### sure that each line below starts "VCPP_...", without a space in the
### first column (i.e., *not* " VCPP_...").
###
######### FOR VS2003 #########
### VCPP_INSTALL_DIR = "C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7"
######### FOR VS2005 #########
### VCPP_INSTALL_DIR = "C:\Program Files\Microsoft Visual Studio 8\VC"
######### FOR VS2008 #########
### VCPP_INSTALL_DIR = "C:\Program Files\Microsoft Visual Studio 9.0\VC"
##############################
### VCPP_INCLUDE1 = $(VCPP_INSTALL_DIR)\atlmfc\include
### VCPP_INCLUDE2 = $(VCPP_INSTALL_DIR)\include
### VCPP_INCLUDE_DIRS = /I$(VCPP_INCLUDE1) /I$(VCPP_INCLUDE2)
### VCPP_LIB1     = $(VCPP_INSTALL_DIR)\atlmfc\lib
### VCPP_LIB2     = $(VCPP_INSTALL_DIR)\lib
### VCPP_LIB_DIRS = /LIBPATH:$(VCPP_LIB1) /LIBPATH:$(VCPP_LIB2)
###
### An alternative solution for setting the INCLUDE and LIB env vars
### correctly for VC++ is to run the VCVARS32.BAT file contained in
### the VC++ bin directory.

EXCEPTIONS = /DTTEXCEPT 
### NB: _WIN32 is defined by cl.exe automatically
WINDOWS     =  /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE

WINDOWS	= $(WINDOWS) /DTTCLASSES /DWIN64 /DVSNET /DTT_64BIT

THREAD_SAFE =   /D_MT
POSIX_THREADS = 

OPTFLAG =  

!IF DEFINED(DEBUG)
DEBUGFLAG = /MDd /Od /Zi /DDEBUG /D_DEBUG /DTTDEBUG
DEBUGLINK = /DEBUG
LIBEXT = D
!ELSE
DEBUGFLAG = /MD /Ox
!ENDIF

CFLAGS = /nologo /EHsc $(DEBUGFLAG) \
         $(WINDOWS) $(EXCEPTIONS) $(THREAD_SAFE) \
         /I$(TTC_INCLUDEDIR) /I$(ODBC)\include $(VCPP_INCLUDE_DIRS) \
         /I$(COMMON) /I$(SAMPLES)

LDFLAGS	= /nologo /link /STACK:3000000 /FIXED:NO $(DEBUGLINK) $(VCPP_LIB_DIRS)

LDFLAGS = $(LDFLAGS) bufferoverflowu.lib

CPLUSPLUS	=	cl

###
### list of object targets below
###

TTC_INCLUDEDIR	=	$(ODBC)\include\ttclasses

TTC_DEMO_CPP_OBJS = \
$(SAMPLES)\testprog_utils.obj \
ttXlaAdmin.obj \
xlasubscriber1.obj \
xlasubscriber2.obj 

TTC_DEMO_C_OBJS = \
$(SAMPLES)\portable_thread_windows.obj 

TESTPROGS = \
ttXlaAdmin.exe \
xlasubscriber1.exe \
xlasubscriber2.exe 


TTC_SOURCE = TTCmd.cpp TTCommand.cpp TTConnection.cpp TTColumn.cpp TTConnectionPool.cpp TTParameter.cpp TTCatalog.cpp TTTStatus.cpp TTypes.cpp TTEnvironment.cpp ttTime.c TTXla.cpp TTLog.cpp TTGlobal.cpp

TTC_INCLUDE = TTCmd.h TTCommand.h TTConnection.h TTColumn.h TTConnectionPool.h TTParameter.h TTCatalog.h TTStatus.h TTTypes.h TTEnvironment.h TTXla.h ttTime.h TTLog.h TTGlobal.h TTIostream.h TT__Header.h TTInclude.h

SRC  = src

#
#	Top-level targets
#

UTILS	       = $(SAMPLES)\testprog_utils.obj 

TTCLASSES_LIB	=	$(ODBC)\lib\ttclasses$(TTVER)$(LIBEXT).lib
TTCLASSES_DLL	=	$(ODBC)\bin\ttclasses$(TTVER)$(LIBEXT).dll

###
### by default, build both direct & client/server TTClasses library
### and example programs
###

all: $(TESTPROGS) 


clean:          
		-erase *.obj
		-erase $(TESTPROGS)
		-erase *.pdb
		-erase *.manifest
		-erase *.txt

###
### .obj rules
###

$(TTC_DEMO_C_OBJS):
	$(CC) /I$(DEMO) /I$(COMMON) $(CFLAGS) -c $*.c /Fo$@

$(TTC_DEMO_CPP_OBJS):
	$(CPLUSPLUS) $(CFLAGS) -c $*.cpp /Fo$@


#.c.obj:
#	$(CC) $(CFLAGS) /c $<
#
#.cpp.obj:
#	$(CPLUSPLUS) $(CFLAGS) /c $<

###
### XLA sample programs
###

xlasubscriber1.exe: xlasubscriber1.obj $(TTCLASSES_LIB) $(UTILS)
        $(CPLUSPLUS) /Fe$@ xlasubscriber1.obj $(UTILS) $(TTCLASSES_LIB) $(LDFLAGS)
	-IF EXIST $@.manifest  ($(WINMT) -manifest $@.manifest -outputresource:$@;1)

xlasubscriber2.exe: xlasubscriber2.obj $(TTCLASSES_LIB) $(UTILS)
	$(CPLUSPLUS) /Fe$@ xlasubscriber2.obj $(UTILS) $(TTCLASSES_LIB) $(LDFLAGS)
	-IF EXIST $@.manifest  ($(WINMT) -manifest $@.manifest -outputresource:$@;1)


ttXlaAdmin.exe: ttXlaAdmin.obj $(TTCLASSES_LIB) $(UTILS)
	$(CPLUSPLUS) /Fe$@ ttXlaAdmin.obj $(UTILS) $(TTCLASSES_LIB) $(LDFLAGS)
	-IF EXIST $@.manifest  ($(WINMT) -manifest $@.manifest -outputresource:$@;1)

