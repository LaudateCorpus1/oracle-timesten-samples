#
# Storage configuration
# If fsname is mounted, then do nothing
# Choices are LVM-RAID0, MDRAID-RAID10
# 
# Creating the file system using mdraid takes ~10 minutes < 1 hour
# Doesn't use more than 4 devices.
# 

- name: check if {{ fsname }} is mounted
  shell:         df -hm "{{ fsname }}" > /dev/null 2>&1
  register:      fsmounted
  failed_when:   fsmounted.rc > 1

- name: fail when mounted already
  fail:
    msg:         "Error: file system {{ fsname }} is already mounted."
  when:          fsmounted.rc|int == 0

- name: if standard shape, start ocid service to iscsiattach any block volumes
  shell:         /usr/bin/oci-metadata -g shape | fgrep Standard
  register:      shape
  failed_when:   shape.rc > 1

- name: fail if Standard/block volumes and md-raid-10
  fail:
    msg:         "Error: MD-RAID-10 not supported on Standard shapes"
  when:          storage == "MD-RAID-10" and shape.rc == 0

- name: run ocid service
  systemd:
    name:           "ocid.service"
    state:          started
    daemon_reload:  true
    enabled:        true
    no_block:       false
  become:           true
  become_user:      root
  when:             shape.rc == 0

- name: get nvme devices, no more than 4
  shell:         lsblk | grep nvme | grep -v part | head -4 | cut -d' ' -f1
  register:      nvmedevs 

- name: get block storage devices, no more than 4
  shell:         lsblk | grep 'sd[b-z]' | grep -v part | head -4 | cut -d' ' -f1
  register:      blkvols 

- name: fail out if no devices for lvm
  fail: 
    msg:         "Error: No NVMe nor block storage devices found."
  when:          storage == "LVM-RAID-0" and nvmedevs.stdout_lines|length == 0 and blkvols.stdout_lines|length == 0


- name: fail out if too few devices for raid-10
  fail:
    msg:         "Error: insufficient number of devices found({{ nvmedevs.stdout_lines|length }}) [{{ nvmedevs.stdout }}].  For raid 10, need 4 devices"
  when:          storage == "MD-RAID-10" and nvmedevs.stdout_lines|length < 4 and blkvols.stdout_lines|length < 4

- name: set variables for nvme
  set_fact: 
    ndevices:    "{{ nvmedevs.stdout_lines|length }}"
    blkdevsfx:   "p1"
    mntopts:     "defaults,noatime,nofail"
    devices:     "{{ nvmedevs.stdout_lines|regex_replace('nvme','/dev/nvme') }}"
    #            common variable but here without suffix
    sdevices:    "{{ nvmedevs.stdout_lines|regex_replace('nvme','/dev/nvme') }}"
  when:          nvmedevs.stdout|length > 0

- name: set variables for block storage but favor nvme if present
  set_fact: 
    ndevices:    "{{ blkvols.stdout_lines|length }}"
    blkdevsfx:   "1"
    mntopts:     "defaults,_netdev,noatime,nofail"
    devices:     "{{ blkvols.stdout_lines|regex_replace('sd','/dev/sd') }}"
  when:          blkvols.stdout|length > 0 and nvmedevs.stdout|length <= 0

- name: block volumes need suffix
  set_fact:
    #sdevices:   "{{ devices | regex_replace('sd([b-z])','sd\\1') }}"
    sdevices:    "{{ item }}{{ blkdevsfx }}"
  with_items:   
  - "{{ devices }}"
  when:          blkvols.stdout|length > 0

- name: debug
  debug:
    msg: "Found {{ ndevices }} devices: {{ devices }} sdevices: {{ sdevices }}"

