# Copyright (c) 1999, 2018, Oracle and/or its affiliates. All rights reserved.
#
# Licensed under the Universal Permissive License v 1.0 as shown
# at http://oss.oracle.com/licenses/upl
#
# Run ttgridrollout to set up grid and database
# Only run on ansible controller, first db instance
#
---

- name: get config files from templates
  template:
    src:            "{{ item }}.j2"
    dest:           "{{ ttgriddir }}/{{ item }}"
    owner:          oracle
    group:          oracle
    mode:           0660
  with_items:       ['attributes.dbdef', 'attributes.connect', 'init.sql', 'ttgrid.conf', 'timesten.conf']
  become:           true
  become_user:      oracle

- name: change attributes template to dbname.dbdef (1)
  command: mv attributes.dbdef "{{ dbname }}.dbdef"
  args:
    chdir:          "{{ ttgriddir }}"
  become:           true
  become_user:      oracle

- name: change connect attributes to cs.connect. (2)
  command: mv attributes.connect "{{ dbname }}cs.connect"
  args:
    chdir:          "{{ ttgriddir }}"
  become:           true
  become_user:      oracle

- name: copy in zookeeper client
  copy:
    src:            "roles/datainstances/files/zoo_client.conf"
    dest:           "{{ ttgriddir }}"
    owner:          oracle
    group:          oracle
    mode:           0550
  become:           true
  become_user:      oracle

- name: get commands to rollout grid; tell me what to do what you really really do.
  shell: "{{ ttinstalldir }}/bin/ttGridRollout -n ./ttgrid.conf > ./ttgridrollout.plan"
  args:
    chdir:          "{{ ttgriddir }}"
  become:           true
  become_user:      oracle
  run_once:         true

# split the commands
#   grid management instances
#   grid database instances
#   database creation
#   residual

- name: split out commands to create active grid management instance
  shell:          sed -r -n -e '1,/gridCreate/p' ./ttgridrollout.plan > "./mg-active-cmds.sh"
  args:
    chdir:        "{{ ttgriddir }}"
    warn:           false
  become:         true
  become_user:    oracle

- name: split out commands to create grid management instances
  shell:          sed -r -n -e '/gridCreate/,/modelApply/{p}' ./ttgridrollout.plan | sed '1d' > "./mg-standby-cmds.sh"
  args:
    chdir:        "{{ ttgriddir }}"
    warn:           false
  become:         true
  become_user:    oracle

- name: split out commands to create grid database instances
  shell:          sed -r -n -e '/dataspacegroup/,/modelApply/p' ./ttgridrollout.plan > "./di-cmds.sh"
  args:
    chdir:        "{{ ttgriddir }}"
    warn:           false
  become:         true
  become_user:    oracle

- name: split out commands to create grid database
  shell:          sed -r -n -e '/dbCreate/,/modelApply/p' ./ttgridrollout.plan > "./crdb-cmds.sh"
  args:
    chdir:        "{{ ttgriddir }}"
    warn:           false
  become:         true
  become_user:    oracle

- name: split out post database creation commands e.g run init.sql
  shell:          sed -r -n -e '/instanceExec/,$p' ./ttgridrollout.plan > "./init.sh"
  args:
    chdir:        "{{ ttgriddir }}"
    warn:           false
  become:         true
  become_user:    oracle

